from datetime import datetime
from Gui.AppInfo import *


class ReportAudioDetails:

    HTML_REPORT_HEADER = """<!DOCTYPE html>
<html lang="en">
<head>
  <title>Bootstrap Example</title>
  <meta charset="utf-8">
  <meta name="viewport" content="width=device-width, initial-scale=1">
  <link rel="stylesheet" href="https://maxcdn.bootstrapcdn.com/bootstrap/3.4.1/css/bootstrap.min.css">
  <script src="https://ajax.googleapis.com/ajax/libs/jquery/3.6.0/jquery.min.js"></script>
  <script src="https://maxcdn.bootstrapcdn.com/bootstrap/3.4.1/js/bootstrap.min.js"></script>
  <style>
    body {
      padding-top: 20px;
      padding-left:  20px;
      padding-right:  50px;
      padding-bottom:  20px;
    }
    @media (max-width: 980px) {
      body {
        padding-top: 0;
      }
    }
  </style>  
</head>
<body>

<div class="container">
  <h2>Dialog Audio Details' Report</h2>
  <hr>
</div>

<table class="table" style="white-space:nowrap;">
  <thead class="thead-dark">
    <tr>
      <th scope="col">#</th>
      <th scope="col">quest_id</th>
      <th scope="col">actor</th>
      <th scope="col">file</th>
      <th scope="col">mp3</th>
      <th scope="col">wav</th>
      <th scope="col">xwm</th>
      <th scope="col">lip</th>
      <th scope="col">fuz</th>
      <th scope="col">subtitle</th>
      <th scope="col">file_path</th>     
      <th scope="col">dialog_type</th>
      <th scope="col">emotion</th>
      <th scope="col">voice_type</th>
      <th scope="col">topic_id</th>
      <th scope="col">branch_id</th>
      <th scope="col">scene_id</th>
      <th scope="col">scene_phase</th>    
    </tr>
  </thead>
  <tbody>
"""
    HTML_REPORT_FOOTER = """  </tbody>
</table>
  <hr>
  ###_replace_footer_text###
  <br>
</body>
</html>
    """
    HTML_REPORT_TABLE: str = """ 
    <tr>
      <th scope="row">###_replace_conter###</th>
      <td >###_replace_quest_id###</td>
      <td >###_replace_actor###</td>
      <td >###_replace_file###</td>
      <td >###_replace_mp3###</td>
      <td >###_replace_wav###</td>
      <td >###_replace_xwm###</td>
      <td >###_replace_lip###</td>
      <td >###_replace_fuz###</td>
      <td >###_replace_subtitle###</td>
      <td >###_replace_file_path###</td>     
      <td >###_replace_dialog_type###</td>
      <td >###_replace_emotion###</td>
      <td >###_replace_voice_type###</td>
      <td >###_replace_topic_id###</td>
      <td >###_replace_branch_id###</td>
      <td >###_replace_scene_id###</td>
      <td >###_replace_scene_phase###</td>
    </tr>     
    """
    FOOTER_MESSAGE = "<i>Documentation generated by <b>{0}</b>. Access the project <a href=\"{1}\" target=\"_blank\">Github</a> for new versions and updates.</i>"

    def __init__(self):
        self.quest_id = ""
        self.actor = ""
        self.file = ""
        self.mp3 = ""
        self.wav = ""
        self.xwm = ""
        self.lip = ""
        self.fuz = ""
        self.subtitle = ""
        self.file_path = ""
        self.dialog_type = ""
        self.emotion = ""
        self.voice_type = ""
        self.topic_id = ""
        self.branch_id = ""
        self.scene_id = ""
        self.scene_phase = ""

    @staticmethod
    def file_ext_color(item_value: str):
        color = 'black'
        if item_value.upper() == "OK":
            color = 'blue'
        elif item_value.upper() == "MISSING":
            color = 'red'
        return color

    @staticmethod
    def html_color(text, color):
        return "<span style=\"color:{0}\">{1}</span>".format(color, text)

    @staticmethod
    def file_ext_tag(file_info):
        return ReportAudioDetails.html_color(file_info, ReportAudioDetails.file_ext_color(file_info))

    @staticmethod
    def export_report(list_audio_details, app: AppInfo):
        """
        Create a details' report about all the dialogues.
        :param list_audio_details:
        :param app_dir:
        :return:
        """
        directory = os.getcwd()
        # print("=======================" + directory)
        filename = "reportAudioDetails_"
        now = datetime.now()
        dt_string = now.strftime("-%d-%m-%Y_%H-%M-%S")
        filename = app.settings_obj.docgen_reports + filename + dt_string + ".html"
        html_str = ReportAudioDetails.HTML_REPORT_HEADER
        item: ReportAudioDetails
        item_count = 0
        for item in list_audio_details:
            item_count_str = str(item_count)
            mp3_html = ReportAudioDetails.file_ext_tag(item.mp3)
            wav_html = ReportAudioDetails.file_ext_tag(item.wav)
            xwm_html = ReportAudioDetails.file_ext_tag(item.xwm)
            lip_html = ReportAudioDetails.file_ext_tag(item.lip)
            fuz_html = ReportAudioDetails.file_ext_tag(item.fuz)
            current_table = ReportAudioDetails.HTML_REPORT_TABLE
            # replace strings
            # print("before: " + current_table)
            current_table = current_table.replace("###_replace_conter###", item_count_str)
            current_table = current_table.replace("###_replace_quest_id###", item.quest_id)
            current_table = current_table.replace("###_replace_actor###", item.actor)
            current_table = current_table.replace("###_replace_file###", item.file)
            current_table = current_table.replace("###_replace_mp3###", mp3_html)
            current_table = current_table.replace("###_replace_wav###", wav_html)
            current_table = current_table.replace("###_replace_xwm###", xwm_html)
            current_table = current_table.replace("###_replace_lip###", lip_html)
            current_table = current_table.replace("###_replace_fuz###", fuz_html)
            current_table = current_table.replace("###_replace_subtitle###", item.subtitle)
            current_table = current_table.replace("###_replace_file_path###", item.file_path)
            current_table = current_table.replace("###_replace_dialog_type###", item.dialog_type)
            current_table = current_table.replace("###_replace_emotion###", item.emotion)
            current_table = current_table.replace("###_replace_voice_type###", item.voice_type)
            current_table = current_table.replace("###_replace_topic_id###", item.topic_id)
            current_table = current_table.replace("###_replace_branch_id###", item.branch_id)
            current_table = current_table.replace("###_replace_scene_id###", item.scene_id)
            current_table = current_table.replace("###_replace_scene_phase###", str(item.scene_phase))
            # print("AFTER: " + current_table)
            html_str += current_table
            item_count += 1
        footer_template = ReportAudioDetails.HTML_REPORT_FOOTER
        footer_msg = ReportAudioDetails.FOOTER_MESSAGE.format(app.APP_NAME_LARGE, app.url_github)
        footer_template = footer_template.replace("###_replace_footer_text###", footer_msg)
        html_str += footer_template
        with open(filename, "w") as text_file:
            text_file.write(html_str)
        return filename


if __name__ == '__main__':
    app_dir = ".\\App\\"
    file_rep1 = ReportAudioDetails()
    file_rep2 = ReportAudioDetails()
    file_rep1.quest_id = "quest_id" + "1"
    file_rep1.actor = "actor" + "1"
    file_rep1.file = "file" + "1"
    file_rep1.mp3 = "ok"
    file_rep1.wav = "ok"
    file_rep1.xwm = "missing"
    file_rep1.lip = "missing"
    file_rep1.fuz = "missing"
    file_rep1.subtitle = "subtitle" + "1"
    file_rep1.file_path = "file_path" + "1"
    file_rep1.dialog_type = "dialog_type" + "1"
    file_rep1.emotion = "emotion" + "1"
    file_rep1.voice_type = "voice_type" + "1"
    file_rep1.topic_id = "topic_id" + "1"
    file_rep1.branch_id = "branch_id" + "1"
    file_rep1.scene_id = "scene_id" + "1"
    file_rep1.scene_phase = "scene_phase" + "1"
    file_rep2.quest_id = "quest_id" + "2"
    file_rep2.actor = "actor" + "2"
    file_rep2.file = "file" + "2"
    file_rep2.mp3 = "MISSING"
    file_rep2.wav = "OK"
    file_rep2.xwm = "OK"
    file_rep2.lip = "OK"
    file_rep2.fuz = "MISSING"
    file_rep2.subtitle = "subtitle" + "2"
    file_rep2.file_path = "file_path" + "2"
    file_rep2.dialog_type = "dialog_type" + "2"
    file_rep2.emotion = "emotion" + "2"
    file_rep2.voice_type = "voice_type" + "2"
    file_rep2.topic_id = "topic_id" + "2"
    file_rep2.branch_id = "branch_id" + "2"
    file_rep2.scene_id = "scene_id" + "2"
    file_rep2.scene_phase = "scene_phase" + "2"
    list_details = []
    list_details.append(file_rep1)
    list_details.append(file_rep2)
    ReportAudioDetails.export_report(list_details, app_dir)


